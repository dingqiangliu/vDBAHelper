## ELinks 0.13.GIT configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?


## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"

## document 
#  Document options.

  ## document.colors 
  #  Default document color settings.

    ## document.colors.link <color|#rrggbb>
    #  Default link color.
    set document.colors.link = "skyblue1"

    ## document.colors.vlink <color|#rrggbb>
    #  Default visited link color.
    set document.colors.vlink = "skyblue1"

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.accesskey 
    #  Options for handling of link access keys. An HTML document can use the
    #  ACCESSKEY attribute to assign an access key to an element. When an access
    #  key is pressed, the corresponding element will be given focus.

      ## document.browse.accesskey.auto_follow [0|1]
      #  Automatically follow a link or submit a form if appropriate accesskey
      #  is pressed - this is the standard behaviour, but it's considered
      #  dangerous.
      set document.browse.accesskey.auto_follow = 1


    ## document.browse.search 
    #  Options for searching.

      ## document.browse.search.show_hit_top_bottom [0|1]
      #  Whether to show a dialog when the search hits the top or bottom of the
      #  document.
      set document.browse.search.show_hit_top_bottom = 0

      ## document.browse.search.show_not_found <num>
      #  How to inform the user when nothing is matched:
      #  0 means do nothing
      #  1 means beep the terminal
      #  2 means pop up message box
      set document.browse.search.show_not_found = 1

    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.confirm_submit [0|1]
      #  Ask for confirmation when submitting a form.
      set document.browse.forms.confirm_submit = 0

  ## document.history 
  #  History options.

    ## document.history.global 
    #  Global history options.

      ## document.history.global.enable [0|1]
      #  Enable global history ("history of all pages visited").
      set document.history.global.enable = 0


## ecmascript 
#  ECMAScript options.

  ## ecmascript.enable [0|1]
  #  Whether to run those scripts inside of documents.
  set ecmascript.enable = 1


## ui 
#  User interface options.

  ## ui.dialogs 
  #  Dialogs-specific appearance and behaviour settings.

    ## ui.dialogs.underline_hotkeys [0|1]
    #  Whether to underline hotkeys in menus to make them more visible. Requires
    #  that underlining is enabled for the terminal.
    set ui.dialogs.underline_hotkeys = 1

    ## ui.dialogs.underline_button_shortcuts [0|1]
    #  Whether to underline button shortcuts to make them more visible. Requires
    #  that underlining is enabled for the terminal.
    set ui.dialogs.underline_button_shortcuts = 1


  ## ui.show_menu_bar_always [0|1]
  #  Always show menu bar on the screen.
  set ui.show_menu_bar_always = 0

  ## ui.clock 
  #  Digital clock in the status bar.

    ## ui.clock.enable [0|1]
    #  Whether to display a digital clock in the status bar.
    set ui.clock.enable = 1

    ## ui.clock.format <str>
    #  Format string for the digital clock. See the strftime(3) manpage for
    #  details.
    set ui.clock.format = "[%Y-%m-%d %H:%M:%S]"



##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.cache 
  #  Cache options.

    ## document.cache.ignore_cache_control [0|1]
    #  Ignore Cache-Control and Pragma server headers. When set, the document is
    #  cached even with 'Cache-Control: no-cache'.
    set document.cache.ignore_cache_control = 0

    ## document.cache.revalidation_interval <num>
    #  Period in seconds that a cache entry is considered to be up-to-date. When
    #  a document is loaded and this interval has elapsed since the document was
    #  initially loaded or most recently revalidated with the server, the server
    #  will be checked in case there is a more up-to-date version of the
    #  document.
    #  
    #  A value of -1 disables automatic revalidation.
    set document.cache.revalidation_interval = 60






##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.accesskey 
    #  Options for handling of link access keys. An HTML document can use the
    #  ACCESSKEY attribute to assign an access key to an element. When an access
    #  key is pressed, the corresponding element will be given focus.

      ## document.browse.accesskey.display [0|1]
      #  Display access key in link info.
      set document.browse.accesskey.display = 1

      ## document.browse.accesskey.priority <num>
      #  Priority of 'accesskey' HTML attribute:
      #  0 is first try all normal bindings; if it fails,
      #       check accesskey
      #  1 is first try only frame bindings; if it fails,
      #       check accesskey
      #  2 is first check accesskey (this can be dangerous)
      set document.browse.accesskey.priority = 2




